services:
  search-google:
    build: ./search-google
    container_name: search-google
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  db-leads:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=leads_user
      - POSTGRES_PASSWORD=secret_password
      - POSTGRES_DB=leads_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leads_user -d leads_db || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
    container_name: db-leads
    ports:
      - "5432:5432"
    networks:
      - leads-network
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  front-web:
    build: ./front-web
    container_name: front-web
    ports:
      - "5173:5173"
    depends_on:
      - search-google
    networks:
      - leads-network

  api:
    build: ./api
    ports:
      - "8085:8085"
    environment:
      - DB_HOST=db-leads
      - DB_PORT=5432
      - DB_USER=leads_user
      - DB_PASSWORD=secret_password
      - DB_NAME=leads_db
      - PORT=8085
    depends_on:
      db-leads:
        condition: service_healthy
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  data-collector:
    build: ./data-collector
    ports:
      - "8086:8086"
    depends_on:
      db-leads:
        condition: service_healthy
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

networks:
  leads-network:
    driver: bridge

volumes:
  db_data: